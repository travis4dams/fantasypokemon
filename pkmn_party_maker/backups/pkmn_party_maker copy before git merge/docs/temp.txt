if not self.has_dexnum():
	assertd(False,"dexnum caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "type_names") or not is_legal_type_names(self.type_names):
	assertd(False,"type_names caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "level") or not is_legal_level(self.level):
	assertd(False,"level caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "EV_ATK") or not is_legal_ev(self.EV_ATK):
	assertd(False,"EV_ATK caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "EV_DEF") or not is_legal_ev(self.EV_DEF):
	assertd(False,"EV_DEF caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "EV_HP") or not is_legal_ev(self.EV_HP):
	assertd(False,"EV_HP caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "EV_SPA") or not is_legal_ev(self.EV_SPA):
	assertd(False,"EV_SPA caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "EV_SPD") or not is_legal_ev(self.EV_SPD):
	assertd(False,"EV_SPD caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "EV_SPE") or not is_legal_ev(self.EV_SPE):
	assertd(False,"EV_SPE caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "IV_ATK") or not is_legal_iv(self.IV_ATK):
	assertd(False,"IV_ATK caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "IV_DEF") or not is_legal_iv(self.IV_DEF):
	assertd(False,"IV_DEF caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "IV_HP") or not is_legal_iv(self.IV_HP):
	assertd(False,"IV_HP caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "IV_SPA") or not is_legal_iv(self.IV_SPA):
	assertd(False,"IV_SPA caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "IV_SPD") or not is_legal_iv(self.IV_SPD):
	assertd(False,"IV_SPD caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "IV_SPE") or not is_legal_iv(self.IV_SPE):
	assertd(False,"IV_SPE caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "friendship") or not is_legal_friendship(self.friendship):
	assertd(False,"friendship caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "held_item_id") or not is_legal_held_item_id(self.held_item_id):
	assertd(False,"held_item_id caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "OT_id") or not is_legal_OT_id(self.OT_id):
	assertd(False,"OT_id caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "OT_name") or not is_legal_OT_name(self.OT_name):
	assertd(False,"OT_name caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "gender_id") or not is_legal_gender_id(self.gender_id):
	assertd(False,"gender_id caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "move1_id") or not is_legal_move_id(self.move1_id):
	assertd(False,"move1_id caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "move2_id") or not is_legal_move_id(self.move2_id):
	assertd(False,"move2_id caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "move3_id") or not is_legal_move_id(self.move3_id):
	assertd(False,"move3_id caused pokemon is_initialized() to fail.")
	return False
if not hasattr(self, "move4_id") or not is_legal_move_id(self.move4_id):
	assertd(False,"move4_id caused pokemon is_initialized() to fail.")
	return False
return True